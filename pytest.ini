[tool:pytest]
# ATHintel Enterprise Testing Configuration

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 8.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=95
    --durations=10
    --maxfail=10
    -ra

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests (may take >1s)
    scraping: Web scraping tests
    analytics: Analytics and ML tests
    database: Database integration tests
    api: API endpoint tests
    performance: Performance benchmark tests
    security: Security-related tests

# Test timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    # Ignore specific warnings from third-party packages
    ignore:.*deprecated.*:DeprecationWarning:pandas
    ignore:.*deprecated.*:DeprecationWarning:numpy
    ignore:.*deprecated.*:DeprecationWarning:sklearn
    ignore:.*unclosed.*:ResourceWarning

# Coverage configuration
[coverage:run]
source = src/
omit = 
    */tests/*
    */venv/*
    */env/*
    */.tox/*
    */site-packages/*
    __pycache__/*
    .eggs/*
    build/*
    dist/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False
sort = Cover

[coverage:html]
directory = htmlcov
title = ATHintel Coverage Report

[coverage:xml]
output = coverage.xml